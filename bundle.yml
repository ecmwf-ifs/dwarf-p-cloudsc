---
### Bundle

name    : cloudsc-bundle
version : 1.5.3
cmake : >
        CMAKE_LINK_DEPENDS_NO_SHARED=ON
        CMAKE_EXPORT_COMPILE_COMMANDS=ON
        BUILD_serialbox=OFF
        BUILD_eckit=OFF
        BUILD_fckit=OFF
        BUILD_atlas=OFF
        BUILD_field_api=OFF
        BUILD_loki=OFF
        ENABLE_MPI=OFF
        ENABLE_OMP=ON

projects :

    - ecbuild :
        git     : https://github.com/ecmwf/ecbuild
        version : 3.9.1
        bundle  : false

    - serialbox :
        git     : https://github.com/reuterbal/serialbox
        version : v2.5.4/patched
        cmake   : >
            SERIALBOX_BUILD_SHARED=ON
            SERIALBOX_ENABLE_FORTRAN=ON
            SERIALBOX_ENABLE_EXPERIMENTAL_FILESYSTEM=OFF
            SERIALBOX_ENABLE_SDB=OFF
            SERIALBOX_EXAMPLES=OFF
            Serialbox_TARGETS_EXPORTED=TRUE
            CMAKE_CXX_EXTENSIONS=ON

    - loki :
        git     : https://github.com/ecmwf-ifs/loki
        version : 0.3.0
        require : ecbuild
        cmake   : >
            LOKI_ENABLE_TESTS=OFF

    - eckit :
        git     : https://github.com/ecmwf/eckit
        version : 1.28.5
        require : ecbuild
        cmake   : >
            ECKIT_ENABLE_TESTS=OFF
            ECKIT_ENABLE_BUILD_TOOLS=OFF
            ECKIT_ENABLE_CUDA=OFF

    - field_api :
        git     : https://github.com/ecmwf-ifs/field_api.git
        version : v0.3.4
        require : ecbuild
        cmake   : >
            UTIL_MODULE_PATH=${CMAKE_SOURCE_DIR}/cloudsc-dwarf/src/common/module

    - fckit :
        git     : https://github.com/ecmwf/fckit
        version : 0.13.3
        require : ecbuild eckit
        cmake   : >
            FCKIT_ENABLE_TESTS=OFF

    - atlas :
        git     : https://github.com/ecmwf/atlas
        version : 0.41.1
        require : ecbuild eckit fckit
        cmake   : >
            ATLAS_ENABLE_TESTS=OFF
            ATLAS_ENABLE_CUDA=OFF

    - cloudsc-dwarf :
        # The CLOUDSC dwarf project with multiple implementations
        dir     : $PWD
        version : develop
        require : ecbuild serialbox loki field_api

options :
    - toolchain :
        help  : Specify compiler options via supplied toolchain file
        cmake : CMAKE_TOOLCHAIN_FILE={{value}}

    - with-single-precision :
        help  : Enable single precision build of the dwarf [ON|OFF]
        cmake : ENABLE_SINGLE_PRECISION={{value}}

    - with-double-precision :
        help  : Enable double precision build of the dwarf [ON|OFF]
        cmake : ENABLE_DOUBLE_PRECISION={{value}}

    - with-field-api :
        help : Enable Field API variants [ON|OFF]
        cmake : BUILD_field_api={{value}}

    - without-mapped-fields :
        help : Disables automatic registering of Field API fields in ACC map
        cmake : ENABLE_FIELD_API_DISABLE_MAPPED_MEMORY=ON

    - with-acc :
        help : Enable OpenACC programming model for GPU variants [ON|OFF]
        cmake : >
            DWARF_P_CLOUDSC_ENABLE_ACC={{value}}
            FIELD_API_ENABLE_ACC={{value}}

    - with-openmp :
        help  : Enable OpenMP threading or GPU offloading [ON|OFF]
        cmake : ENABLE_OMP={{value}}

    - with-cuda :
        help  : Enable GPU kernel variants based on CUDA and CUDA-Fortran [ON|OFF]
        cmake : >
            DWARF_P_CLOUDSC_ENABLE_CUDA={{value}}
            FIELD_API_ENABLE_CUDA={{value}}

    - with-hip :
        help  : Enable GPU kernel variant based on HIP [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_HIP={{value}}

    - with-sycl :
        help  : Enable GPU kernel variant based on SYCL [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_SYCL={{value}}

    - sycl-sub-group-size :
         help  : Specify the SYCL subgroup size
         cmake : SYCL_SUB_GROUP_SIZE={{value}}

    - cloudsc-cpp-math :
         help  : "Specify the math function interfaces to use in C++ (device) kernels. Available options: C, STD, SYCL"
         cmake : CLOUDSC_CPP_MATH={{value}}

    - with-mpi :
        help  : Enable MPI-parallel driver [ON|OFF]
        cmake : ENABLE_MPI={{value}}

    - with-loki :
        help  : Enable Loki source-to-source transformations [ON|OFF]
        cmake : BUILD_loki={{value}}

    - without-loki-install :
        help  : Skip installation of Loki (Requires Loki to be on the PATH)
        cmake : LOKI_ENABLE_NO_INSTALL=ON

    - loki-frontend :
        help  : Frontend parser to use for Loki transformations [FP|OMNI]
        cmake : LOKI_FRONTEND={{value}}

    - with-python :
        help  : Enable Python F2Py variants of CLOUDSC [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_PYTHON_F2PY={{value}}

    - with-pyiface :
        help  : Enable Python-driver variant for modified cloudsc-fortran variant [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_PYIFACE={{value}}

    - with-pyiface-binary :
        help  : Build Fortran binary corresponding to pyiface variant
        cmake : DWARF_P_CLOUDSC_ENABLE_PYIFACE_BINARY={{value}}

    - with-atlas :
        help  : Enable Atlas and its dependencies (eckit, fckit) for Atlas-based variants of CLOUDSC [ON|OFF]
        cmake : >
            BUILD_eckit={{value}}
            BUILD_fckit={{value}}
            BUILD_atlas={{value}}

    - with-dependency-tests :
        help  : Build and enable tests for CLOUDSC dependencies that are build as part of the bundle (eckit, fckit, Atlas, Loki)
        cmake : >
            LOKI_ENABLE_TESTS=ON
            ECKIT_ENABLE_TESTS=ON
            FCKIT_ENABLE_TESTS=ON
            ATLAS_ENABLE_TESTS=ON
            FIELD_API_ENABLE_TESTS=ON

    - with-prototype1 :
        help  : Build the original operational Fortran prototype [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_PROTOTYPE1={{value}}

    - with-hdf5 :
        help : Enable use of HDF5 input file [ON|OFF]
        cmake : DWARF_P_CLOUDSC_ENABLE_HDF5={{value}}

    - with-serialbox :
        help  : Enable Serialbox utility for platform-agnostic file I/O [ON|OFF]
        cmake : >
            DWARF_P_CLOUDSC_ENABLE_SERIALBOX={{value}}
            BUILD_serialbox={{value}}

...
