[default]
# Specifies the behaviour of auto-expanded routines
role = 'kernel'
expand = true  # Automatically expand subroutine calls
strict = true  # Throw exceptions during dicovery
enable_imports = true  # Chase dependencies incurred via imports

# Ensure that we are never adding these to the tree, and thus
# do not attempt to look up the source files for these.
disable = ['timer_mod', 'abort', 'file_io_mod', 'foe*', 'fokoop']

# Prune the tree for these to ensure they are not processed by transformations
ignore = ['parkind1', 'yomphyder', 'yoecldp', 'fc*_mod']

# Define entry point for call-tree transformation
[routines]

[routines.cloudsc_driver]
  role = 'driver'
  expand = true


# Define indices and bounds for array dimensions
[dimensions]

[dimensions.horizontal]
  size = 'KLON'
  index = 'JL'
  bounds = ['KIDIA', 'KFDIA']
  aliases = ['NPROMA', 'KDIM%KLON']

[dimensions.vertical]
  size = 'KLEV'
  index = 'JK'

[dimensions.block_dim]
  size = 'NGPBLKS'
  index = 'IBL'

# Define individual transformations for inclusion in pipelines
[transformations]

[transformations.RemoveCallsTransformation]
  module = 'transformations.utility_routines'
[transformations.RemoveCallsTransformation.options]
  routines = ['DR_HOOK', 'ABOR1', 'WRITE(NULOUT']

[transformations.ModuleWrapTransformation]
  module = 'loki.transform'
[transformations.ModuleWrapTransformation.options]
  module_suffix = '_MOD'

[transformations.SCCDependencyTrafo]
  classname = 'DependencyTransformation'
  module = 'loki.transform'
[transformations.SCCDependencyTrafo.options]
  suffix = '_SCC'
  module_suffix = '_MOD'


[transformations.SCCVectorNoTrim]
  classname  = 'SCCVectorPipeline'
  module     = 'transformations.single_column_coalesced'
[transformations.SCCVectorNoTrim.options]
  horizontal = '%dimensions.horizontal%'
  vertical   = '%dimensions.vertical%'
  block_dim  = '%dimensions.block_dim%'
  directive  = 'openacc'
  trim_vector_sections = false


# Define bulk-transformation pipelines for each "mode"
[pipelines]

[pipelines.scc]
  transformations = [
    'RemoveCallsTransformation',
    'SCCVectorNoTrim',
    'ModuleWrapTransformation',
    'SCCDependencyTrafo',
  ]

# Overwrite frontend for header modules that cannot be parsed via OMNI
[frontend_args]

[frontend_args."yomphyder.F90"]
frontend = 'FP'

[frontend_args."yomcst.F90"]
frontend = 'FP'

[frontend_args."yoethf.F90"]
frontend = 'FP'

[frontend_args."yoecldp.F90"]
frontend = 'FP'
